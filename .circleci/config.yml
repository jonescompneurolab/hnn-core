# See: https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/
version: 2.1

jobs:
    build_docs:
      machine:
        # from https://circleci.com/docs/configuration-reference/#available-linux-machine-images-cloud
        image: ubuntu-2204:current
      resource_class: large
      steps:
          - checkout

          - run:
              name: Install miniconda
              command: |
                  sudo apt-get install wget
                  wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh;
                  chmod +x ~/miniconda.sh;
                  bash ~/miniconda.sh -b -p ~/miniconda;

          - run:
              name: Install openmpi
              command: |
                  sudo apt-get install libopenmpi-dev openmpi-bin

          - run:
              name: Setup Python environment
              command: |
                  export PATH=~/miniconda/bin:$PATH
                  conda update --yes --quiet conda
                  conda create -n testenv --yes pip python=3.13
                  source activate testenv
                  # necessary due to https://github.com/mpi4py/mpi4py/issues/335#issuecomment-1486366039
                  rm $CONDA_PREFIX/compiler_compat/ld
                  conda install --yes scipy numpy matplotlib
                  pip install mpi4py

          - run:
              name: Setup doc building stuff
              command: |
                  source ~/miniconda/bin/activate testenv
                  sudo apt-get install pandoc

          - run:
              name: Setup Neuron
              command: |
                  source ~/miniconda/bin/activate testenv
                  pip install NEURON

          - run:
              name: Setup hnn-core
              command: |
                  source ~/miniconda/bin/activate testenv
                  pip install -U pip setuptools virtualenv
                  pip install '.[parallel, docs, gui]'

          - restore_cache:
              keys:
                - built-{{ checksum ".circleci/build_cache" }}

          - run:
              name: Build the documentation
              command: |
                  source ~/miniconda/bin/activate testenv
                  cd doc/ && make html

          - persist_to_workspace:
              root: doc/_build
              paths: html

          - save_cache:
              key: built-{{ checksum ".circleci/build_cache" }}
              paths:
                - doc/auto_examples
                - doc/_build

          - store_artifacts:
              path: doc/_build/html/
              destination: html

    docs-deploy:
        # will only be run on master branch
        docker:
          - image: node:8.10.0
        steps:
          - checkout

          - attach_workspace:
              at: doc/_build

          - run:
              name: Install and configure dependencies
              command: |
                npm install -g --silent gh-pages@2.2
                git config --global user.email "circle@jonescompneurolab.com"
                git config --global user.name "Circle Ci"
          - add_ssh_keys:
              fingerprints:
                - "30:88:9c:32:2f:33:a7:dd:fe:f6:7a:19:4b:8b:c1:ce"

          - run:
              # push built docs directory on the `gh-pages` branch
              name: Deploy docs to gh-pages branch
              command: |
                touch doc/_build/html/.nojekyll
                gh-pages --dotfiles --message "copy binder config [skip ci]" --dist doc/_build/html/binder --dest ./binder
                gh-pages --dotfiles --message "doc updates [skip ci]" --dist doc/_build/html --dest ./dev

workflows:
  build:
    jobs:
      - build_docs
      - docs-deploy:
          requires:
            - build_docs
          filters:
            branches:
              only: master
