  name: Unit tests

  on:
    push:
      branches: ['**']
    pull_request:
      branches: ['**']

  jobs:
    build:

      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest,macos-latest]
          python-version: [3.8, 3.11, 3.12]

      steps:
        - uses: actions/checkout@v4

        - name: Install Ubuntu System dependencies
          if: matrix.os == 'ubuntu-latest'
          shell: bash -el {0}
          run: |
              sudo add-apt-repository ppa:ubuntu-toolchain-r/test
              sudo apt-get update
              sudo apt-get install libopenmpi-dev openmpi-bin

        - name: Activate conda environment for macOS
          if: matrix.os == 'macos-latest'
          uses: conda-incubator/setup-miniconda@v3
          with:
            activate-environment: test
            python-version: ${{ matrix.python-version }}
            fetch-depth: 2

        - name: Activate Python environment for Ubuntu
          if: matrix.os == 'ubuntu-latest'
          uses: actions/setup-python@v5
          with:
              python-version: ${{ matrix.python-version }}
        
        - name: Install Python  dependencies
          shell: bash -el {0}
          run: |
            if [ ${{ matrix.os }} == 'macos-latest' ]; then
              python -m pip install --upgrade pip
              conda install --yes -c conda-forge mpi4py openmpi
            elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then 
              python -m pip install --upgrade pip
              python -m pip install mpi4py
            fi
        - name: Install HNN-core
          shell: bash -el {0}
          run: |
            pip install --verbose '.[opt, parallel, test, gui]'
        - name: Lint with flake8
          shell: bash -el {0}
          run: |
            flake8 --count hnn_core
        - name: Test with pytest
          shell: bash -el {0}
          run: |
            python -m pytest ./hnn_core/tests/  --cov=hnn_core --cov-report=xml
        - name:  Upload coverage to Codecov
          shell: bash -el {0}
          run: |
            bash <(curl -s https://codecov.io/bash) -f ./coverage.xml